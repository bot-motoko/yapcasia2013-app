#!perl

use strict;
use lib "local/lib/perl5";
use lib "lib";
use Encode qw(decode_utf8);
use YAPC2013;

my $app = YAPC2013->new;

my $file = shift;
open my $fh, '<', $file or die;
my $subject = decode_utf8(<$fh>);
my $message = decode_utf8(do { local $/; <$fh> });
my $email_api = $app->container->get('API::Email');
my $talk_api = $app->container->get('API::Talk');
my $member_api = $app->container->get('API::Member');
my $xslate = Text::Xslate->new(path => "templates");
my @accepted = $talk_api->search({
    status => "accepted"
});

foreach my $talk (@accepted) {
    my $member = $member_api->lookup($talk->{member_id});
    if ($member->{name} eq '941' || $member->{name} eq 'Daisuke Maki') {
        warn "Skipping $member->{name}";
    }

    my $message = $xslate->render('notice/speaker-accepted.eml', {
        member => $member,
        talk   => $talk
    });

    warn $message;

#     $email_api->send_email({
#         to => $member->{email},
#         subject => $subject,
#         message => $message,
#     });
}

my @rejected = $talk_api->search({
    status => "rejected"
});

foreach my $talk (@rejected) {
    my $member = $member_api->lookup($talk->{member_id});
    if ($member->{name} eq '941' || $member->{name} eq 'Daisuke Maki') {
        warn "Skipping $member->{name}";
    }

    my $message = $xslate->render('notice/speaker-rejected.eml', {
        member => $member,
        talk   => $talk
    });

    warn $message;

#     $email_api->send_email({
#         to => $member->{email},
#         subject => $subject,
#         message => $message,
#     });
}
